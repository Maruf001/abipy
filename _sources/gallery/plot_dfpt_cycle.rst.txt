.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_plot_dfpt_cycle.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_dfpt_cycle.py:


DFPT SCF cycle
==============

This example shows how to plot the results of the DFPT
self-consistent cycle reported in the main output file.



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /gallery/images/sphx_glr_plot_dfpt_cycle_001.png
            :class: sphx-glr-multi-img

    *

      .. image:: /gallery/images/sphx_glr_plot_dfpt_cycle_002.png
            :class: sphx-glr-multi-img

    *

      .. image:: /gallery/images/sphx_glr_plot_dfpt_cycle_003.png
            :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/gmatteo/git_repos/pymatgen/pymatgen/util/plotting.py:550: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()
    /Users/gmatteo/git_repos/pymatgen/pymatgen/util/plotting.py:550: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()
    /Users/gmatteo/git_repos/pymatgen/pymatgen/util/plotting.py:550: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()





|


.. code-block:: default

    from abipy.abilab import abiopen
    import abipy.data as abidata

    # Open the output file with DFPT calculations (Note the .abo extension).
    # Alternatively, one can use `abiopen.py run.abo -nb` to generate a jupyter notebook.
    abo = abiopen(abidata.ref_file("refs/gs_dfpt.abo"))

    # Plot all SCF-GS sections found in the output file.
    while True:
        dfpt_cycle = abo.next_d2de_scf_cycle()
        if dfpt_cycle is None: break
        dfpt_cycle.plot()


    # If timopt -1, we can extract the timing and plot the data.
    #timer = abo.get_timer()
    #timer.plot_pie()

    abo.close()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.861 seconds)


.. _sphx_glr_download_gallery_plot_dfpt_cycle.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_dfpt_cycle.py <plot_dfpt_cycle.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_dfpt_cycle.ipynb <plot_dfpt_cycle.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
