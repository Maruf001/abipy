.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_plot_gscycle.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_gscycle.py:


Ground-state SCF cycle
======================

This example shows how to plot the results of the
GS self-consistent cycle reported in the main output file.



.. image:: /gallery/images/sphx_glr_plot_gscycle_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/gmatteo/git_repos/pymatgen/pymatgen/util/plotting.py:550: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      plt.show()





|


.. code-block:: default

    from abipy.abilab import abiopen
    import abipy.data as abidata

    # Open the output file with GS calculation (Note the .abo extension).
    # Alternatively, one can use `abiopen.py run.abo -nb`
    # to generate a jupyter notebook.
    abo = abiopen(abidata.ref_file("refs/si_ebands/run.abo"))

    # Plot all SCF-GS sections found in the output file.
    # Use abo.next_d2de_scf_cycle() for DFPT cycles.
    scf_cycle = abo.next_gs_scf_cycle()
    if scf_cycle is not None:
        scf_cycle.plot()

    # If timopt -1, we can extract the timing and plot the data.
    timer = abo.get_timer()
    timer.plot_pie()

    abo.close()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.258 seconds)


.. _sphx_glr_download_gallery_plot_gscycle.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_gscycle.py <plot_gscycle.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_gscycle.ipynb <plot_gscycle.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
